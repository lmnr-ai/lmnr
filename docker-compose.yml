# This compose file is a lightweight version of docker-compose-full.yml.
# It is intended to be used for local quickstarts.
# It does not include Qdrant, Semantic Search, Python executor, and RabbitMQ.
# It only includes frontend, clickhouse, postgres, and app-server.

name: lmnr

services:
  postgres:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 5

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    volumes:
      - type: volume
        source: clickhouse-data
        target: /var/lib/clickhouse/
      - type: volume
        source: clickhouse-logs
        target: /var/log/clickhouse-server/
      - type: bind
        source: ./clickhouse/config/users.xml
        target: /etc/clickhouse-server/users.d/users.xml
        read_only: true
      - type: bind
        source: ./clickhouse/001000-initial.sql
        target: /docker-entrypoint-initdb.d/001000-initial.sql
        read_only: true
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  frontend:
    image: ghcr.io/lmnr-ai/frontend
    pull_policy: always
    ports:
      - "${FRONTEND_HOST_PORT:-5667}:5667"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PORT: 5667
      BACKEND_URL: http://app-server:8000
      SHARED_SECRET_TOKEN: ${SHARED_SECRET_TOKEN}
      NEXTAUTH_URL: http://localhost:5667
      NEXTAUTH_SECRET: some_secret
      NEXT_PUBLIC_URL: http://localhost:5667
      ENVIRONMENT: LITE # this disables some runtime dependencies
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

  agent-manager:
    image: ghcr.io/lmnr-ai/agent-manager
    pull_policy: always
    ports:
      - "${AGENT_MANAGER_HOST_PORT:-8901}:8901"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8901
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      SCRAPYBARA_API_KEY: ${SCRAPYBARA_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      BACKEND_URL: http://app-server
      BACKEND_HTTP_PORT: 8000
      BACKEND_GRPC_PORT: 8001
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    healthcheck:
      # naive sleep to ensure agent-manager is ready
      test: ["CMD", "sleep", "3"]
      interval: 3s
      timeout: 6s
      retries: 1

  app-server:
    image: ghcr.io/lmnr-ai/app-server
    pull_policy: always
    ports:
      - "${APP_SERVER_HOST_PORT:-8000}:8000"
      - "${APP_SERVER_GRPC_HOST_PORT:-8001}:8001"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_started
      agent-manager:
        condition: service_healthy
    environment:
      PORT: 8000
      GRPC_PORT: 8001
      AGENT_MANAGER_URL: http://agent-manager:8901
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      SHARED_SECRET_TOKEN: ${SHARED_SECRET_TOKEN}
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      ENVIRONMENT: LITE # this disables runtime dependency on rabbitmq, semantic search, and python executor
      AEAD_SECRET_KEY: ${AEAD_SECRET_KEY}

volumes:
  postgres-data:
  clickhouse-data:
  clickhouse-logs:
